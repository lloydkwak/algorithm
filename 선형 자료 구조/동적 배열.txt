배열의 문제점 : 처음 배열을 선언할 때 크기를 지정해야 하며, 그 이상의 자료를 넣을 수 없다.

정의
자료 개수가 변함에 따라 크기가 변경되는 배열 = 동적 배열
*** 일반 배열처럼 언어 차원에서 지원되는 기능이 아님.
---> 배열을 이용해 만들어 낸 별도의 자료구조
---------------------------------------------------------------------------------------------------------------------
배열을 이용하기에 배열의 특성을 그대로 가짐
- 원소들은 메모리에 연속된 위치에 저장
- 주어진 위치의 원소를 반환, 변경 하는 동작을 O(1)에 할 수 있다.

+ 동적 배열만의 특징
- 크기를 변경하는 resize() 연산이 가능. 동작 수행에 크기 n에 비례하는 시간이 걸림.
- 새로운 원소를 배열 끝에 추가함으로써 크기를 1 늘리는 append() 연산 지원. 동작 수행에 상수시간.
---------------------------------------------------------------------------------------------------------------------
append() 연산.
배열을 할당 할때 여유분 메모리를(M) 받아둔다.

할당 된 메모리를 모두 사용하면 더 큰 새 배열을 동적으로 할당 받고 기존 배열을 복사한 뒤 포인터를 바꿔치기 합니다.
이 과정은 선형 시간이 걸리지만 이과정에서 M을 고정하지 않고 배열에 크기에 비례하게 늘려서 받는다면 평균 상수 시간에 가능.

동적 배열을 사용할 때 append() 연산을 여러번 수행할 때  배열의 최종 크기를 미리 짐작 할 수 있다면,
미리 용량을 늘려둠으로써 재할당 비용을 줄일 수 있다.
---------------------------------------------------------------------------------------------------------------------

*동적배열은 대부분의 언어 표준 라이브러리에서 제공
c++ : vector
c#, java : ArrayList